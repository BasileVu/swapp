/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('./toast-container.component');
var import1 = require('@angular/core/src/linker/view');
var import3 = require('@angular/core/src/linker/view_utils');
var import4 = require('@angular/core/src/metadata/view');
var import5 = require('@angular/core/src/linker/view_type');
var import6 = require('@angular/core/src/change_detection/change_detection');
var import7 = require('@angular/core/src/linker/component_factory');
var import8 = require('@angular/platform-browser/src/security/dom_sanitization_service');
var import9 = require('./toast-options');
var import10 = require('@angular/core/src/animation/animation_transition');
var import11 = require('@angular/core/src/animation/animation_style_util');
var import12 = require('@angular/core/src/animation/animation_sequence_player');
var import13 = require('@angular/core/src/animation/animation_styles');
var import14 = require('@angular/core/src/animation/animation_keyframe');
var import15 = require('@angular/core/src/animation/animation_player');
var import16 = require('@angular/core/src/linker/view_container');
var import17 = require('../node_modules/@angular/common/src/directives/ng_for.ngfactory');
var import18 = require('@angular/core/src/linker/template_ref');
var import19 = require('@angular/core/src/change_detection/differs/iterable_differs');
var import20 = require('@angular/common/src/directives/ng_for');
var import21 = require('@angular/core/src/security');
var import22 = require('../node_modules/@angular/common/src/directives/ng_if.ngfactory');
var import23 = require('../node_modules/@angular/common/src/directives/ng_switch.ngfactory');
var import24 = require('@angular/common/src/directives/ng_if');
var import25 = require('@angular/common/src/directives/ng_switch');
var Wrapper_ToastContainer = (function () {
    function Wrapper_ToastContainer(p0, p1, p2) {
        this._changed = false;
        this.context = new import0.ToastContainer(p0, p1, p2);
    }
    Wrapper_ToastContainer.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ToastContainer.prototype.ngOnDestroy = function () {
    };
    Wrapper_ToastContainer.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_ToastContainer.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ToastContainer.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ToastContainer.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_ToastContainer;
}());
exports.Wrapper_ToastContainer = Wrapper_ToastContainer;
var renderType_ToastContainer_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_ToastContainer_Host0 = (function (_super) {
    __extends(View_ToastContainer_Host0, _super);
    function View_ToastContainer_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ToastContainer_Host0, renderType_ToastContainer_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_ToastContainer_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'toast-container', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_ToastContainer0(this.viewUtils, this, 0, this._el_0);
        this._ToastContainer_0_3 = new Wrapper_ToastContainer(this.injectorGet(import8.DomSanitizer, this.parentIndex), this.compView_0.ref, this.injectorGet(import9.ToastOptions, this.parentIndex, null));
        this.compView_0.create(this._ToastContainer_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._ToastContainer_0_3.context);
    };
    View_ToastContainer_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ToastContainer) && (0 === requestNodeIndex))) {
            return this._ToastContainer_0_3.context;
        }
        return notFoundResult;
    };
    View_ToastContainer_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._ToastContainer_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_ToastContainer_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_ToastContainer_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ToastContainer_Host0;
}(import1.AppView));
exports.ToastContainerNgFactory = new import7.ComponentFactory('toast-container', View_ToastContainer_Host0, import0.ToastContainer);
var styles_ToastContainer = [];
var ToastContainer_inOut_states = {
    flyRight: {
        opacity: '1',
        transform: 'translateX(0)'
    },
    flyLeft: {
        opacity: '1',
        transform: 'translateX(0)'
    },
    fade: { opacity: '1' },
    slideDown: {
        opacity: '1',
        transform: 'translateY(0)'
    },
    slideUp: {
        opacity: '1',
        transform: 'translateY(0)'
    },
    '*': {},
    void: {}
};
function ToastContainer_inOut_factory(view, element, currentState, nextState) {
    view.animationContext.cancelActiveAnimation(element, 'inOut', (nextState == 'void'));
    var collectedStyles = {};
    var player = null;
    var totalTime = 0;
    var defaultStateStyles = ToastContainer_inOut_states['*'];
    var startStateStyles = ToastContainer_inOut_states[currentState];
    if ((startStateStyles == null)) {
        (startStateStyles = defaultStateStyles);
    }
    var endStateStyles = ToastContainer_inOut_states[nextState];
    if ((endStateStyles == null)) {
        (endStateStyles = defaultStateStyles);
    }
    import11.renderStyles(element, view.renderer, import11.clearStyles(startStateStyles));
    if (((player == null) && ((currentState == 'void') && (nextState == 'flyRight')))) {
        player = new import12.AnimationSequencePlayer([view.renderer.animate(element, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                {
                    opacity: '0',
                    transform: 'translateX(100%)'
                }
            ])), import11.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import14.AnimationKeyframe(0, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{}]))),
                new import14.AnimationKeyframe(1, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 200, 0, 'ease-in')]);
        totalTime = 200;
    }
    if (((player == null) && ((currentState == 'flyRight') && (nextState == 'void')))) {
        player = new import12.AnimationSequencePlayer([view.renderer.animate(element, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [startStateStyles])), [
                new import14.AnimationKeyframe(0, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{
                        opacity: 'true',
                        transform: 'true'
                    }
                ]))),
                new import14.AnimationKeyframe(1, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{
                        opacity: '0',
                        transform: 'translateX(100%)'
                    }
                ])))
            ], 200, 0, null)]);
        totalTime = 200;
    }
    if (((player == null) && ((currentState == 'void') && (nextState == 'flyLeft')))) {
        player = new import12.AnimationSequencePlayer([view.renderer.animate(element, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                {
                    opacity: '0',
                    transform: 'translateX(-100%)'
                }
            ])), import11.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import14.AnimationKeyframe(0, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{}]))),
                new import14.AnimationKeyframe(1, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 200, 0, 'ease-in')]);
        totalTime = 200;
    }
    if (((player == null) && ((currentState == 'flyLeft') && (nextState == 'void')))) {
        player = new import12.AnimationSequencePlayer([view.renderer.animate(element, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [startStateStyles])), [
                new import14.AnimationKeyframe(0, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{
                        opacity: 'true',
                        transform: 'true'
                    }
                ]))),
                new import14.AnimationKeyframe(1, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{
                        opacity: '0',
                        transform: 'translateX(-100%)'
                    }
                ])))
            ], 200, 0, null)]);
        totalTime = 200;
    }
    if (((player == null) && ((currentState == 'void') && (nextState == 'fade')))) {
        player = new import12.AnimationSequencePlayer([view.renderer.animate(element, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                { opacity: '0' }
            ])), import11.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import14.AnimationKeyframe(0, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{}]))),
                new import14.AnimationKeyframe(1, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 300, 0, 'ease-in')]);
        totalTime = 300;
    }
    if (((player == null) && ((currentState == 'fade') && (nextState == 'void')))) {
        player = new import12.AnimationSequencePlayer([view.renderer.animate(element, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [startStateStyles])), [
                new import14.AnimationKeyframe(0, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{ opacity: 'true' }]))),
                new import14.AnimationKeyframe(1, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{ opacity: '0' }])))
            ], 300, 0, null)]);
        totalTime = 300;
    }
    if (((player == null) && ((currentState == 'void') && (nextState == 'slideDown')))) {
        player = new import12.AnimationSequencePlayer([view.renderer.animate(element, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                {
                    opacity: '0',
                    transform: 'translateY(-200%)'
                }
            ])), import11.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import14.AnimationKeyframe(0, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{}]))),
                new import14.AnimationKeyframe(1, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 300, 0, 'ease-in')]);
        totalTime = 300;
    }
    if (((player == null) && ((currentState == 'slideDown') && (nextState == 'void')))) {
        player = new import12.AnimationSequencePlayer([view.renderer.animate(element, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [startStateStyles])), [
                new import14.AnimationKeyframe(0, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{
                        opacity: 'true',
                        transform: 'true'
                    }
                ]))),
                new import14.AnimationKeyframe(1, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{
                        opacity: '0',
                        transform: 'translateY(-200%)'
                    }
                ])))
            ], 300, 0, null)]);
        totalTime = 300;
    }
    if (((player == null) && ((currentState == 'void') && (nextState == 'slideUp')))) {
        player = new import12.AnimationSequencePlayer([view.renderer.animate(element, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                {
                    opacity: '0',
                    transform: 'translateY(200%)'
                }
            ])), import11.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import14.AnimationKeyframe(0, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{}]))),
                new import14.AnimationKeyframe(1, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 300, 0, 'ease-in')]);
        totalTime = 300;
    }
    if (((player == null) && ((currentState == 'slideUp') && (nextState == 'void')))) {
        player = new import12.AnimationSequencePlayer([view.renderer.animate(element, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [startStateStyles])), [
                new import14.AnimationKeyframe(0, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{
                        opacity: 'true',
                        transform: 'true'
                    }
                ]))),
                new import14.AnimationKeyframe(1, new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles, [{
                        opacity: '0',
                        transform: 'translateY(200%)'
                    }
                ])))
            ], 300, 0, null)]);
        totalTime = 300;
    }
    if ((player == null)) {
        (player = new import15.NoOpAnimationPlayer());
    }
    player.onDone(function () {
        player.destroy();
        import11.renderStyles(element, view.renderer, import11.prepareFinalAnimationStyles(startStateStyles, endStateStyles));
    });
    view.animationContext.queueAnimation(element, 'inOut', player);
    return new import10.AnimationTransition(player, currentState, nextState, totalTime);
}
var renderType_ToastContainer = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, styles_ToastContainer, { inOut: ToastContainer_inOut_factory });
var View_ToastContainer0 = (function (_super) {
    __extends(View_ToastContainer0, _super);
    function View_ToastContainer0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ToastContainer0, renderType_ToastContainer, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
        this._expr_9 = import6.UNINITIALIZED;
        this._expr_10 = import6.UNINITIALIZED;
    }
    View_ToastContainer0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'id', 'toast-container'), null);
        this._text_2 = this.renderer.createText(this._el_1, '\n      ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_3 = new import16.ViewContainer(3, 1, this, this._anchor_3);
        this._TemplateRef_3_5 = new import18.TemplateRef_(this, 3, this._anchor_3);
        this._NgFor_3_6 = new import17.Wrapper_NgFor(this._vc_3.vcRef, this._TemplateRef_3_5, this.parentView.injectorGet(import19.IterableDiffers, this.parentIndex), this.ref);
        this._text_4 = this.renderer.createText(this._el_1, '\n    ', null);
        this._text_5 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._anchor_3,
            this._text_4,
            this._text_5
        ]), null);
        return null;
    };
    View_ToastContainer0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import18.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import20.NgFor) && (3 === requestNodeIndex))) {
            return this._NgFor_3_6.context;
        }
        return notFoundResult;
    };
    View_ToastContainer0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_3_0_0 = this.context.toasts;
        this._NgFor_3_6.check_ngForOf(currVal_3_0_0, throwOnChange, false);
        this._NgFor_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
        var currVal_9 = this.context.position;
        if (import3.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this.renderer.setElementStyle(this._el_1, 'position', ((this.viewUtils.sanitizer.sanitize(import21.SecurityContext.STYLE, currVal_9) == null) ? null : this.viewUtils.sanitizer.sanitize(import21.SecurityContext.STYLE, currVal_9).toString()));
            this._expr_9 = currVal_9;
        }
        var currVal_10 = import3.inlineInterpolate(1, '', this.context.positionClass, '');
        if (import3.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            this.renderer.setElementProperty(this._el_1, 'className', currVal_10);
            this._expr_10 = currVal_10;
        }
    };
    View_ToastContainer0.prototype.destroyInternal = function () {
        this._vc_3.destroyNestedViews();
    };
    View_ToastContainer0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 3)) {
            return new View_ToastContainer1(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        return null;
    };
    return View_ToastContainer0;
}(import1.AppView));
exports.View_ToastContainer0 = View_ToastContainer0;
var View_ToastContainer1 = (function (_super) {
    __extends(View_ToastContainer1, _super);
    function View_ToastContainer1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_ToastContainer1, renderType_ToastContainer, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_26 = import6.UNINITIALIZED;
        this._expr_27 = import6.UNINITIALIZED;
    }
    View_ToastContainer1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n        ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_2 = new import16.ViewContainer(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import18.TemplateRef_(this, 2, this._anchor_2);
        this._NgIf_2_6 = new import22.Wrapper_NgIf(this._vc_2.vcRef, this._TemplateRef_2_5);
        this._text_3 = this.renderer.createText(this._el_0, ' \n        ', null);
        this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_4 = new import16.ViewContainer(4, 0, this, this._anchor_4);
        this._TemplateRef_4_5 = new import18.TemplateRef_(this, 4, this._anchor_4);
        this._NgIf_4_6 = new import22.Wrapper_NgIf(this._vc_4.vcRef, this._TemplateRef_4_5);
        this._text_5 = this.renderer.createText(this._el_0, '\n        ', null);
        this._el_6 = import3.createRenderElement(this.renderer, this._el_0, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._NgSwitch_6_3 = new import23.Wrapper_NgSwitch();
        this._text_7 = this.renderer.createText(this._el_6, '\n          ', null);
        this._anchor_8 = this.renderer.createTemplateAnchor(this._el_6, null);
        this._vc_8 = new import16.ViewContainer(8, 6, this, this._anchor_8);
        this._TemplateRef_8_5 = new import18.TemplateRef_(this, 8, this._anchor_8);
        this._NgSwitchCase_8_6 = new import23.Wrapper_NgSwitchCase(this._vc_8.vcRef, this._TemplateRef_8_5, this._NgSwitch_6_3.context);
        this._text_9 = this.renderer.createText(this._el_6, '\n          ', null);
        this._anchor_10 = this.renderer.createTemplateAnchor(this._el_6, null);
        this._vc_10 = new import16.ViewContainer(10, 6, this, this._anchor_10);
        this._TemplateRef_10_5 = new import18.TemplateRef_(this, 10, this._anchor_10);
        this._NgSwitchDefault_10_6 = new import23.Wrapper_NgSwitchDefault(this._vc_10.vcRef, this._TemplateRef_10_5, this._NgSwitch_6_3.context);
        this._text_11 = this.renderer.createText(this._el_6, '\n        ', null);
        this._text_12 = this.renderer.createText(this._el_0, '             \n      ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3,
            this._anchor_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._anchor_8,
            this._text_9,
            this._anchor_10,
            this._text_11,
            this._text_12
        ]), [disposable_0]);
        return null;
    };
    View_ToastContainer1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import18.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import24.NgIf) && (2 === requestNodeIndex))) {
            return this._NgIf_2_6.context;
        }
        if (((token === import18.TemplateRef) && (4 === requestNodeIndex))) {
            return this._TemplateRef_4_5;
        }
        if (((token === import24.NgIf) && (4 === requestNodeIndex))) {
            return this._NgIf_4_6.context;
        }
        if (((token === import18.TemplateRef) && (8 === requestNodeIndex))) {
            return this._TemplateRef_8_5;
        }
        if (((token === import25.NgSwitchCase) && (8 === requestNodeIndex))) {
            return this._NgSwitchCase_8_6.context;
        }
        if (((token === import18.TemplateRef) && (10 === requestNodeIndex))) {
            return this._TemplateRef_10_5;
        }
        if (((token === import25.NgSwitchDefault) && (10 === requestNodeIndex))) {
            return this._NgSwitchDefault_10_6.context;
        }
        if (((token === import25.NgSwitch) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 11)))) {
            return this._NgSwitch_6_3.context;
        }
        return notFoundResult;
    };
    View_ToastContainer1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_26 = this.parentView.context.animate;
        if (import3.checkBinding(throwOnChange, this._expr_26, currVal_26)) {
            var animationTransition_inOut = this.componentType.animations['inOut'](this, this._el_0, ((this._expr_26 == import6.UNINITIALIZED) ? 'void' : this._expr_26), ((currVal_26 == import6.UNINITIALIZED) ? 'void' : currVal_26));
            animationTransition_inOut.onStart(this.handleEvent_0.bind(this).bind(this, '@inOut.start'));
            animationTransition_inOut.onDone(this.handleEvent_0.bind(this).bind(this, '@inOut.done'));
            this._expr_26 = currVal_26;
        }
        var currVal_2_0_0 = this.context.$implicit.config.showCloseButton;
        this._NgIf_2_6.check_ngIf(currVal_2_0_0, throwOnChange, false);
        this._NgIf_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        var currVal_4_0_0 = this.context.$implicit.title;
        this._NgIf_4_6.check_ngIf(currVal_4_0_0, throwOnChange, false);
        this._NgIf_4_6.ngDoCheck(this, this._anchor_4, throwOnChange);
        var currVal_6_0_0 = this.context.$implicit.config.enableHTML;
        this._NgSwitch_6_3.check_ngSwitch(currVal_6_0_0, throwOnChange, false);
        this._NgSwitch_6_3.ngDoCheck(this, this._el_6, throwOnChange);
        var currVal_8_0_0 = true;
        this._NgSwitchCase_8_6.check_ngSwitchCase(currVal_8_0_0, throwOnChange, false);
        this._NgSwitchCase_8_6.ngDoCheck(this, this._anchor_8, throwOnChange);
        this._NgSwitchDefault_10_6.ngDoCheck(this, this._anchor_10, throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
        this._vc_4.detectChangesInNestedViews(throwOnChange);
        this._vc_8.detectChangesInNestedViews(throwOnChange);
        this._vc_10.detectChangesInNestedViews(throwOnChange);
        var currVal_27 = import3.inlineInterpolate(1, 'toast toast-', this.context.$implicit.type, '');
        if (import3.checkBinding(throwOnChange, this._expr_27, currVal_27)) {
            this.renderer.setElementProperty(this._el_0, 'className', currVal_27);
            this._expr_27 = currVal_27;
        }
    };
    View_ToastContainer1.prototype.destroyInternal = function () {
        this._vc_2.destroyNestedViews();
        this._vc_4.destroyNestedViews();
        this._vc_8.destroyNestedViews();
        this._vc_10.destroyNestedViews();
    };
    View_ToastContainer1.prototype.detachInternal = function () {
        var animationTransition_inOut = this.componentType.animations['inOut'](this, this._el_0, this._expr_26, 'void');
        animationTransition_inOut.onStart(this.handleEvent_0.bind(this).bind(this, '@inOut.start'));
        animationTransition_inOut.onDone(this.handleEvent_0.bind(this).bind(this, '@inOut.done'));
    };
    View_ToastContainer1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_ToastContainer1.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 2)) {
            return new View_ToastContainer2(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        if ((nodeIndex == 4)) {
            return new View_ToastContainer3(this.viewUtils, this, 4, this._anchor_4, this._vc_4);
        }
        if ((nodeIndex == 8)) {
            return new View_ToastContainer4(this.viewUtils, this, 8, this._anchor_8, this._vc_8);
        }
        if ((nodeIndex == 10)) {
            return new View_ToastContainer5(this.viewUtils, this, 10, this._anchor_10, this._vc_10);
        }
        return null;
    };
    View_ToastContainer1.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.parentView.context.clicked(this.context.$implicit) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_ToastContainer1;
}(import1.AppView));
var View_ToastContainer2 = (function (_super) {
    __extends(View_ToastContainer2, _super);
    function View_ToastContainer2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_ToastContainer2, renderType_ToastContainer, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_ToastContainer2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray2(2, 'class', 'toast-close-button'), null);
        this._text_1 = this.renderer.createText(this._el_0, '×\n        ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), [disposable_0]);
        return null;
    };
    View_ToastContainer2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_ToastContainer2.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.parentView.parentView.context.removeToast(this.parentView.context.$implicit) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_ToastContainer2;
}(import1.AppView));
var View_ToastContainer3 = (function (_super) {
    __extends(View_ToastContainer3, _super);
    function View_ToastContainer3(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_ToastContainer3, renderType_ToastContainer, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import6.UNINITIALIZED;
        this._expr_3 = import6.UNINITIALIZED;
    }
    View_ToastContainer3.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_ToastContainer3.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2 = import3.inlineInterpolate(1, '', (this.parentView.context.$implicit.config.titleClass || this.parentView.parentView.context.titleClass), '');
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementProperty(this._el_0, 'className', currVal_2);
            this._expr_2 = currVal_2;
        }
        var currVal_3 = import3.inlineInterpolate(1, '', this.parentView.context.$implicit.title, '');
        if (import3.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setText(this._text_1, currVal_3);
            this._expr_3 = currVal_3;
        }
    };
    View_ToastContainer3.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ToastContainer3;
}(import1.AppView));
var View_ToastContainer4 = (function (_super) {
    __extends(View_ToastContainer4, _super);
    function View_ToastContainer4(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_ToastContainer4, renderType_ToastContainer, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_1 = import6.UNINITIALIZED;
    }
    View_ToastContainer4.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'span', import3.EMPTY_INLINE_ARRAY, null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_ToastContainer4.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.parentView.parentView.context.sanitizer.bypassSecurityTrustHtml(this.parentView.context.$implicit.message);
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_0, 'innerHTML', this.viewUtils.sanitizer.sanitize(import21.SecurityContext.HTML, currVal_1));
            this._expr_1 = currVal_1;
        }
    };
    View_ToastContainer4.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ToastContainer4;
}(import1.AppView));
var View_ToastContainer5 = (function (_super) {
    __extends(View_ToastContainer5, _super);
    function View_ToastContainer5(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_ToastContainer5, renderType_ToastContainer, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import6.UNINITIALIZED;
        this._expr_3 = import6.UNINITIALIZED;
    }
    View_ToastContainer5.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'span', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_ToastContainer5.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2 = import3.inlineInterpolate(1, '', (this.parentView.context.$implicit.config.messageClass || this.parentView.parentView.context.messageClass), '');
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementProperty(this._el_0, 'className', currVal_2);
            this._expr_2 = currVal_2;
        }
        var currVal_3 = import3.inlineInterpolate(1, '', this.parentView.context.$implicit.message, '');
        if (import3.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setText(this._text_1, currVal_3);
            this._expr_3 = currVal_3;
        }
    };
    View_ToastContainer5.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ToastContainer5;
}(import1.AppView));
//# sourceMappingURL=toast-container.component.ngfactory.js.map