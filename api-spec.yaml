swagger: '2.0'

info:
  version: "1.0.0"
  title: Swapp API
  description:
    The swapp API specification. All endpoints are implicitely prefixed by __/api__ for the sake of readability.
    
consumes:
  - application/json
produces:
  - application/json

paths:
  /login:
    post:
      description: Logs an user in.
      parameters:
        - in: body
          name: body
          description: The credentials of the user.
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        200:
          description: Successful response
        401:
          description: Invalid username/password combination or account not active
          
  /logout:
    get:
      description: Logs an user out.
      responses:
        200:
          description: Successful response
        401:
          description: User is not logged in

  /users:
    post:
      description: Creates an user.
      parameters:
        - in: body
          name: body
          description: The account info of the user.
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: Successful response
        400:
          description: Missing field or json malformed
        409:
          description: An user with the same susername already exists
          
  /account:
    get:
      description: Get the account info of the current user logged in.
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              id: 
                type: number
              username:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              location:
                type: object
                properties:
                  street:
                    type: string
                  city:
                    type: string
                  region:
                    type: string
                  country:
                    type: string
              last_modification_date:
                type: string
              categories:
                type: array
                items:
                  type: number
              items:
                type: array
                items:
                  type: number
              notes:
                type: array
                items:
                  type: number
              likes:
                type: array
                items:
                  type: number
        401:
          description: User is not logged in
    put:
      description: Edit all the current user's account info.
      parameters:
        - in: body
          name: body
          description: The account info to update.
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: Successful response
        401:
          description: User is not logged in
    patch:
      description: Edit one or more of the current user's account info.
      parameters:
        - in: body
          name: body
          description: The account info to update.
          required: false
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: Successful response
        401:
          description: User is not logged in
  /items:
    get:
      description: Gets unarchived `Item` objects.
      parameters:
        -
          name: q
          in: query
          description: Query of user
          required: false
          type: string
          
        -
          name: category
          in: query
          description: category of item wanted.
          required: false
          type: string
        
        -
          name: lat
          in: query
          description: latitude of current point from where to search.
          required: false
          type: number
          
        -
          name: lon
          in: query
          description: longitude of current point from where to search.
          required: false
          type: number
          
        -
          name: radius
          in: query
          description: radius (in kilometers) in which items must be to appear in the result.
          required: false
          type: number
          
        -
          name: price_min
          in: query
          description: lower bound of an item's price range taht must e respected in order for an item to appear in the result.
          required: false
          type: number
          
        -
          name: price_max
          in: query
          description: upper bound of an item's price range taht must e respected in order for an item to appear in the result.
          required: false
          type: number
          
        -
          name: order_by
          in: query
          description: define the sorting in the result.
          required: false
          type: string
          
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfItems
            type: array
            items:
              title: Item
              type: object
              properties:
              
                id:
                  type: number
                name:
                  type: string
                creation_date:
                  type: string
                image_url:
                  type: string
                category:
                  type: string
                city:
                  type: string
                country:
                  type: string
                offer_received:
                  type: number
                views:
                  type: number
                comments:
                  type: number
                likes:
                  type: number
                owner_image_url:
                  type: string
                  
    post:
      description: Creates a new `Item`.
      parameters:
        -
          name: name
          in: query # FIXME
          description: The name of the item.
          required: true
          type: string
            
      responses:
        201:
          description: Created
          headers:
            Location: 
              description: "Location of the created object"
              type: string
          
            
                  
  /items/{id}:
    get:
      description: |
        Gets a detailed unarchived `Item` object.
      parameters:
        -
          name: id
          in: path
          description: id of the item
          required: true
          type: number
      responses:
        200:
          description: Successful response
          schema:
            title: ObjectDetail
            type: object
            properties:
              id:
                type: number
              name:
                type: string
              description:
                type: string
              price_min:
                type: number
              price_max:
                type: number
              creation_date:
                type: string
              condition:
                type: string
              brand:
                type: string
              color:
                type: string
              owner:
                type: string
              number_of_vote:
                type: number
              category:
                type: string
              comments:
                type: array
                items:
                  type: number
                  
definitions:
  User:
    type: object
    properties:
      username:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      password:
        type: string
