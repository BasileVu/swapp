swagger: '2.0'

info:
  version: "1.0.0"
  title: Swapp API
  description:
    "The swapp API specification. All endpoints are implicitely prefixed by __/api__ for the sake of readability."
    
consumes:
  - application/json
produces:
  - application/json

paths:
  /csrf:
    get:
      description: "Gets a CSRF token required to use the api's routes. When this route is queried, a **cookie is set**. The token can be found at the key **csrftoken**."
      responses:
        200:
          description: "Successful operation. **Sets a cookie at the key csrftoken.**"

  /login:
    post:
      description: "Logs an user in."
      parameters:
        - in: body
          name: body
          description: "The credentials of the user."
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        200:
          description: "Successful operation."
        401:
          description: "Invalid username/password combination or account not active."
          
  /logout:
    get:
      description: "Logs an user out."
      responses:
        200:
          description: "Successful operation."
        401:
          description: "User is not authenticated."

  /users:
    post:
      description: "Creates an user."
      parameters:
        - in: body
          name: body
          description: "The account info of the user."
          required: true
          schema:
            $ref: "#/definitions/UserCreation"
      responses:
        201:
          description: "Successful operation."
        400:
          description: "Location not existing."
        409:
          description: "An user with the same username already exists."
          
  /users/{username}:
    get:
      description: "Gets the public account info of the given user."
      parameters:
        - in: path
          name: username
          description: "The username of the target user."
          required: true
          type: string
      responses:
        200:
          description: "Successful operation."
          schema:
            type: object
            properties:
              id:
                type: number
              profile_picture_url:
                type: string
              username:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              location:
                type: string
              items:
                type: array
                items:
                  type: number
              notes:
                type: number
              note_avg:
                type: number
          
  /account:
    get:
      description: "Gets the account info of the current user logged in."
      responses:
        200:
          description: "Successful operation."
          schema:
            type: object
            properties:
              id: 
                type: number
              profile_picture_url:
                type: string
              username:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              location:
                  $ref: "#/definitions/Location"
              last_modification_date:
                type: string
              categories:
                type: array
                items:
                  type: string
              items:
                type: array
                items:
                  type: number
              notes:
                type: number
              note_avg:
                type: number
        401:
          description: "User is not authenticated."
    put:
      description: "Updates all the current user's account info."
      parameters:
        - in: body
          name: body
          description: "The account info to update."
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: "Successful operation."
        401:
          description: "User is not authenticated."
    patch:
      description: "Partially updates the current user's account info."
      parameters:
        - in: body
          name: body
          description: "The account info to update."
          required: false
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: "Successful response."
        401:
          description: "User is not authenticated."
          
  /account/password:
    put:
      description: "Updates the password of the current user logged in."
      parameters:
        - in: body
          name: body
          description: "The account info to update."
          required: true
          schema:
            type: object
            properties:
              old_password:
                type: string
              new_password:
                type: string
      responses:
        200:
          description: "Successful operation."
        400:
          description: "Passwords not matching."
    
  /account/location:
    put:
      description: "Updates the location of the current user logged in."
      parameters:
        - in: body
          name: body
          description: "The account info to update."
          required: true
          schema:
            $ref: "#/definitions/Location"
      responses:
        200:
          description: "Successful operation."
        400:
          description: "Location not existing."
      
    patch:
      description: "Partially updates the location of the current user logged in."
      parameters:
      - in: body
        name: body
        description: "The account info to update."
        required: false
        schema:
          $ref: "#/definitions/Location"
      responses:
        200:
          description: "Successful operation."
        400:
          description: "Location not existing."
          
  /notes:
    post:
      description: "Creates a new note."
      parameters:
      - in: body
        name: body
        description: "The content of the note."
        required: true
        schema:
          $ref: "#/definitions/Note"
      responses:
        201:
          description: "Successful operation."
          
  /notes/{id}:
    get:
      description: "Gets the info of the specified note."
      parameters:
      - in: path
        name: id
        description: "The id of the note."
        required: true
        type: number
      responses:
        200:
          description: "Successful operation."
          schema:
            $ref: "#/definitions/Note"
          
  /items:
    get:
      description: "Gets unarchived items according to the specified filters. If no parameter are given, items that the current user could find interresting will be returned."
      parameters:
        - in: query
          name: q
          description: "Query of user."
          required: false
          type: string
        - in: query
          name: category
          description: "Category of item wanted."
          required: false
          type: string
        - in: query
          name: lat
          description: "Latitude of current point from where to search."
          required: false
          type: number
        - in: query
          name: lon
          description: "Longitude of current point from where to search."
          required: false
          type: number
        - in: query
          name: radius
          description: "Radius (in kilometers) in which items must be to appear in the result."
          required: false
          type: number
        - in: query
          name: price_min
          description: "Lower bound of an item's price range that must be respected in order for an item to appear in the result."
          required: false
          type: number
        - in: query
          name: price_max
          description: "Upper bound of an item's price range that must be respected in order for an item to appear in the result."
          required: false
          type: number
        - in: query
          name: order_by
          description: "Define the sorting in the result."
          required: false
          type: string
      responses:
        200:
          description: "Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/DetailedItemInfo"
                  
    post:
      description: "Creates a new item."
      parameters:
        - in: body
          name: body
          description: "The content of the item."
          required: true
          schema:
            $ref: "#/definitions/SetItemInfo"
      responses:
        201:
          description: "Successful operation."
          
  /items/{id}:
    get:
      description: "Gets a detailed unarchived item."
      parameters:
        - in: path
          name: id
          description: "The id of the item."
          required: true
          type: number
      responses:
        200:
          description: "Successful operation."
          schema:
            $ref: "#/definitions/DetailedItemInfo"
            
    put:
      description: "Updates the info of the given item."
      parameters:
        - in: path
          name: id
          description: "The id of the item."
          required: true
          type: number
        - in: body
          name: body
          description: "The content of the item."
          required: true
          schema:
            $ref: "#/definitions/SetItemInfo"
      responses:
        200:
          description: "Successful operation."
        401:
          description: "User not authenticated."
              
    patch:
      description: "Partially updates the info of the given item."
      parameters:
        - in: path
          name: id
          description: "The id of the item."
          required: true
          type: number
        - in: body
          name: body
          description: "The content of the item."
          required: false
          schema:
            $ref: "#/definitions/SetItemInfo"
      responses:
        200:
          description: "Successful operation."
        401:
          description: "User not authenticated."
            
  /items/{id}/comments:
    get:
      description: "Gets all comments of an item."
      parameters:
        - in: path
          name: id
          description: "The id of the item."
          required: true
          type: number
      responses:
        200:
          description: "Successful operation."
          schema:
            type: array
            items:
              type: object
              properties:
                user:
                  type: number
                date:
                  type: string
                content:
                  type: string
                item:
                  type: number

    post:
      tags:
        - Not implemented
      description: "Creates a new comment on a specific item. The user posting the comment is identified with his token. The date of publication is defined on server side."
      parameters:
        - in: path
          name: id
          description: "The id of the commented item."
          required: true
          type: number
        - in: body
          name: body
          description: "The comment."
          required: true
          schema:
            type: object
            properties:
              content:
                type: string
      responses:
        201:
          description: "Successful operation."
          
  /notifications:
    get:
      description: "Gets all the notifications for the current user."
      responses:
        200:
          description: "Successful operation."
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                content:
                  type: string
                read:
                  type: boolean
                date:
                  type: string
        401:
          description: "User not authenticated."
          
  /notifications/{id}:
    patch:
      description: "Sets a notification as read or not."
      parameters:
      - in: path
        name: id
        description: "The id of the notification."
        required: true
        type: number
      - in: body
        name: body
        description: "The content of the notification."
        required: false
        schema:
          type: object
          properties:
            read:
              type: boolean
      responses:
        200:
          description: "Successful operation."
        401:
          description: "User not authenticated."
          
  /images:
    post:
      description: "Creates a new image, either for an item or for an user, according to the payload. The encoding must be **multipart/form-data**."
      parameters:
        - in: formData
          name: image
          description: "The image to updload."
          required: true
          type: file
        - in: formData
          name: item
          description: 
            "The id of the item that will be linked to the image. If this parameter is specified, the image will be linked to the item."
          required: false
          type: number
        - in: formData
          name: user
          description: "The id of the user having the account. If this parameter is specified, the image will be the user's picture."
          required: false
          type: number
      responses:
        201:
          description: "Successful operation."
        401:
          description: "User not authenticated."
          
  /images/{id}:
    delete:
      description: "Deletes the specified image."
      parameters:
        - in: path
          name: id
          description: "The id of the image."
          required: true
          type: number
      responses:
        204:
          description: "Successful operation."
        401:
          description: "User not authenticated."
          
  /offers:
    post:
      description: "Creates a new offer."
      parameters:
      - in: body
        name: body
        description: "The content of the offer."
        required: true
        schema:
          $ref: "#/definitions/Offer"
      responses:
        201:
          description: "Successful operation."
        401:
          description: "User not authenticated."
          
  /offers/{id}:
    get:
      description: "Gets the info of the specified offer."
      parameters:
      - in: path
        name: id
        description: "The id of the offer."
        required: true
        type: number
      responses:
        200:
          description: "Successful operation."
          schema:
            type: object
            properties:
              id:
                type: number
              accepted:
                type: boolean
              status:
                type: boolean
              comment:
                type: string
              item_given:
                type: number
              item_received:
                type: number
        401:
          description: "User not authenticated."
          
    put:
      description: "Updates the info of the given offer."
      parameters:
        - in: path
          name: id
          description: "The id of the offer."
          required: true
          type: number
        - in: body
          name: body
          description: "The content of the offer."
          required: true
          schema:
            $ref: "#/definitions/Offer"
      responses:
        200:
          description: "Successful operation."
        401:
          description: "User not authenticated."
              
    patch:
      description: "Partially updates the info of the given offer."
      parameters:
        - in: path
          name: id
          description: "The id of the offer."
          required: true
          type: number
        - in: body
          name: body
          description: "The content of the offer."
          required: false
          schema:
            $ref: "#/definitions/Offer"
      responses:
        200:
          description: "Successful operation."
        401:
          description: "User not authenticated."
          
    delete:
      description: "Deletes the specified offer."
      parameters:
        - in: path
          name: id
          description: "The id of the offer."
          required: true
          type: number
      responses:
        204:
          description: "Successful operation."
        401:
          description: "User not authenticated."
               
definitions:
  UserCreation:
    type: object
    properties:
      username:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      password:
        type: string
      password_confirmation:
        type: string
      street:
        type: string
      city:
        type: string
      region:
        type: string
      country:
        type: string
        
  User:
    type: object
    properties:
      username:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      password:
        type: string

  Location:
    type: object
    properties:
      street:
        type: string
      city:
        type: string
      region:
        type: string
      country:
        type: string
        
  Note:
    type: object
    properties:
      user:
        type: number
      offer:
        type: number
      text:
        type: string
      note:
        type: number
        
  Offer:
    type: object
    properties:
      accepted:
        type: boolean
      status:
        type: boolean
      comment:
        type: string
      item_given:
        type: number
      item_received:
        type: number
  
  SetItemInfo:
    type: object
    properties:
      name: 
        type: string
      description:
        type: string
      price_min:
        type: number
      price_max:
        type: number
      category:
        type: number
        
  DetailedItemInfo:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      description:
        type: string
      price_min:
        type: number
      price_max:
        type: number
      creation_date:
        type: string
      owner_username:
        type: string
      category:
        type: object
        properties:
          id:
            type: number
          name:
            type: string
      views:
        type: number
      image_urls:
        type: array
        items:
          type: string
      likes:
        type: number
      comments:
        type: number
      offers_received:
        type: number
